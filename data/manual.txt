1]BLISS Manual (Revision 6-5-2023)

For those of you who wish to use BLISS, please read this manual through, or
just go ahead and try to figure it out for yourself, I don't control your life!
/

2]Dependencies:

BLISS requires having GCC installed on your computer, and builds from 11-15-22
and earlier require an install of nCurses, newer builds do not require it.

The CONV utility requires an install of ffmpeg.
/

3]Compiling:

Compiling BLISS is as simple as running the following commands:

1 - gcc bliss.c -o bliss
2 - ./bliss
3 - rc
4 - rc all

3.1]What do those four commands do?

The first command, [gcc bliss.c -o bliss] tells GCC to export the bliss app as
bliss on your computer.

The second command [./bliss] runs the bliss app you just compiled with GCC.

The third command [rc] tells BLISS to use GCC to compile the compiling utility.

The fourth command [rc all] launches the recompile utility, which, when given
the all flag, compiles every single app found in the apps.txt file. If it
cannot find your app in the folder, GCC will output an error. If your app will
not compile, try checking if you added its name in apps.txt!

4]BLISS:

BLISS is incredibly simple on its own, all it does is check for one of a few
hard-coded tools, such as the [exit] command, [rc] command, or [splash]
command. Each of these commands does something that couldn't be made into its
own modular app, and thus, were hard-coded. The first versions of BLISS used
entirely hard-coded tools, which would add about 20 lines of code per app you
wanted to use. 

To use a third-party app, or one of your own design, simply put its name on a
new line in the apps.txt file, located in the data folder. This will allow RC
to locate it, and BLISS to locate it. 

BLISS works by opening the apps.txt file, and checking the first operator in a
command against the list of apps provided. If it matches any of them, it will
build a command to launch the app. This method makes BLISS infinitely more
modular, and easier to work with for an end-user, but also allows garbage data
in the apps.txt file to cause errors.

Integrated commands: 

splash: Displays the splash text. exit: Quits BLISS. rc: Recompiles the RC
utility.

5]CLS Command:

Format - [cls]

The CLS command simply clears the screen. I made this a module, as adding it to
BLISS itself made BLISS unnecessarily large, and complex. BLISS is about
maximizing modularity, rather than maximizing processor efficiency or filesize.

6]CONV Command:

Format - [conv]

CONV is the video conversion utility. This app was made to make converting MKV
files en masse far easier, as all you do is type CONV and every non-MP4 file
in the convert folder will be converted to MP4. The only thing to avoid is
giving it non-video files, as this will have unpredictable results.

7]DEL Command:

Format - [del] [filename.extention]

DEL deletes specified file. Do be warned, this does NOT move it to a recycle
bin folder, this PERMANENTLY deletes files. ONLY use this if you are certain
you want the file gone!

8]EDIT Command:

Format - [edit] OR [edit] [file]

EDIT is a simplistic text editor, with numerous flaws. I suggest using Nemo
for the time being, but EDIT is functional enough to use. 

When you run EDIT with the [edit] command only, you will load to the EDIT
menu, which allows you to load files, save files, exit, or ask for help. 

To open a new file, type [new] and hit enter. To open a file, type [open] 
and hit enter. To load a file, type [open] and hit enter. For help, type [help]
and hit enter. To exit, type [exit] and hit enter.

Within the editor: To save a file, on a new line, type [s()] and hit enter to
save a file, to go back to the menu, type [e()] on a new line and hit enter.

8]HELP Command:

Format: [help]

This tool is great for quick overviews on different tools in the BLISS project,
and runs by using outf to display help.txt from in the data folder! When you
make your own apps, it is suggested to add your own entries into the HELP table
to help you remember what to do, and what your app does! Just keep to an 80
column table format, otherwise it might not display right on some terminals!

9]INFO Command:

Format: [info] OR [info] [all] OR [info] [appName]

The information utility is great for printing version data on different apps. 
Any BLISS-compliant apps must accept a -v flag for printing version data, and
the info command simply launches an app with a -v flag, to print its version
data.

This app works by checking the contents of the apps.txt file, then builds a
launch command ending in -v to tell the app to print its version data. There
are three ways to use this app:

[info]           Prints the version data of the info app itself.
[info] [all]     Prints the version data of all apps in apps.txt.
[info] [appName] Prints the version data of the specified app, if in apps.txt

9]LIST Command:

Format: [list]

Prints the contents of the current directory. In the case of BLISS, it will be
the folder BLISS is located in. This is the same as the ls command or dir
command.

10]MDIR Command:

Format: [mdir] [path]

MDIR makes a directory at the specified path. This works the same way as the
mkdir command. 

11]OUTF Command:

Format: [outf] [pathToFile.extention]

OUTF loads a file, and then prints the contents of it, line by line. This file
is printed to the terminal directly, and is not editable in any way. This is a
good way to print something like the HELP menu, like is done in BLISS.

12]RC Command:

Format: [rc] [all] OR [rc] [appName]

RC is the recompiler utility. BLISS itself can compile the RC Utility, but RC
is needed to automatically compile every other app in BLISS. RC scans the
apps.txt file, and, if provided an [all] flag, will recompile or compile every
app in the list using GCC. If you provide an app name instead of [all], RC
will compile only that application. 

13]RDIR Command:

Format: [rdir] [pathToDirectory]

RDIR is the folder deletion tool. It works the same as rm -r, and rmdir. Once
a directory is deleted, it is NOT moved to the recycle bin, and is PERMANENTLY
gone. Only use this if you are ABSOLUTELY sure you want a directory gone!

<<