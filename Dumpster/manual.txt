BLISS Manual

What is BLISS? 
    BLISS is the Basic Library of Integrated Software Solutions, an app
collection developed for me to learn how to write C starting from no
experience. I started this project in June of 2022, and V1.0 is to release
within December of 2022. 
    BLISS is meant to serve as an example of simplistic, modular, lightweight
terminal software. It is not intended for actual use, but more as a learning
tool, or something to experiment with.



How do I compile?
    Well, if you've made it this far, you've either found the GitHub repo, or
have downloaded it already. Either way, you know you need to download the 
project to begin. Once you have this done, on Windows, Mac, and Linux, ensure
you have GCC installed, then simply open a terminal window in the folder you 
downloaded BLISS to, then execute:

[gcc bliss.c -o bliss]

    From here, on Linux or Mac, to launch BLISS, execute:

[./bliss]

    For Windows, execute:

[bliss]

    At this point, you should be greeted with the following display:

BLISS Version 1.0            | CrystalCraft Studios 2022
-----------------------------+--------------------------------------------------

:

    Your cursor will be immediately following the colon, which serves as your 
prompt. From this prompt, to compile the rest of BLISS, you must first execute:

[rc]

    This will recompile the recompiling utility (RC), allowing you to recompile
other modules. Assuming you desire a full install of BLISS, you may execute:

[rc all]

    This will cause the RC application to parse {data/apps.txt} and compile
every program on the list. If you do not wish to use certain apps from the
list, remove them from this list.



How do I install my own software?
    Assuming your software can be executed through the command line, it is just
as simple as appending its name to the {data/apps.txt} file, however, if you
wish to avoid having errors when running the [info] command, you need to include
a bit of code that reads the -v flag. You can find this code at the beginnings
of the main function in every module I have written, and it does include the
text within the parentheses of the main function declaration.
    If you are not worried about breaking the text formatting of the info table,
you do not have to include this. It is absolutely not necessary for the function
of this application suite.



I have installed an app, but I want it in the help guide.
    To add an external app to the help guide, open {data/help.txt} and write in
your help information for that app. Do note, if you input more characters than
the default entries per line, they will wrap in most terminal emulators, causing
formatting errors. This will not damage anything, but it may look bad.



How do I uninstall apps?
    This is probably the easiest part of BLISS' design, other than installing,
all you need to do is open {data/apps.txt} in any text editor, and remove the
app's name from the list. 



How do I uninstall BLISS?
    Simply navigate to the root folder and delete the whole thing. This app does
not move beyond the BLISS folder. Do note, any subdirectories will be destroyed
in this process, so back up any files you desire to keep.



How do I open the BLISS help guide?
    Whilst BLISS is running, type [help] and hit enter. The help guide should
load, assuming help is in apps.txt, and help.c has been compiled!



I have found a bug, what do I do?
    Please, inform me of the bug on the official BLISS project GitHub, and I
will work on it as soon as I can!



I have a weird error, what do I do?
    Assuming you have found the one and only error code within BLISS, see the
terribly short list of error codes below. If you have the APPS-00 error, you
only need to make a file named apps.txt in the {bliss/data/} folder. You will
need to append program names into it, and a copy of the appslist will be
included below.

{data/apps.txt} contents:

cls
del
edit
help
info
list
mdir
outf
rc
rdir



Error codes: 
    APPS-00: Missing data/apps.txt file. Fix: Create bliss/data/apps.txt 
file, or check that it exists.
    